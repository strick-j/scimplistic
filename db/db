package db

import (
	"database/sql"
	"fmt"

	_ "github.com/lib/pq"
	log "github.com/sirupsen/logrus"
)

func DatabaseConnect() {
	log.WithFields(log.Fields{"Category": "Server Processes", "Function": "DatabaseConnect"}).Trace("Starting Database Connection")
	values, err := utils.ReadConfig("settings.json")
	if err != nil {
		log.WithFields(log.Fields{"Category": "Server Processes", "Function": "DatabaseConnect"}).Error(err)
	}

	psqlconn := fmt.Sprintf("host=%s port=%d user=%s password=%s dbname=%s sslmode=disable", values.DatabaseIP, values.DatabasePort, values.DatabaseUser, values.DatabasePass, values.DatabaseName)

	// open database
	db, err := sql.Open("postgres", psqlconn)
	CheckError(err)

	// close database
	defer db.Close()

	// check db
	err = db.Ping()
	if err != nil {
		log.WithFields(log.Fields{"Category": "Server Processes", "Function": "DatabaseConnect"}).Error(err)
		return
	}

	log.WithFields(log.Fields{"Category": "Server Processes", "Function": "DatabaseConnect"}).Info("Database Connection Successful!")
}
